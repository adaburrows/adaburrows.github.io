'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/docs/math-explorations/real-exponents/','title':"Fractional, Real, Imaginary and Complex Exponents",'content':"Fractional, Real, Imaginary and Complex Exponents When I was younger, I was told that exponentiation was repeated multiplication. I was also told that multiplication was repeated addition. I took this at face value and I though that this was how computers calculated things. It made sense for integers. It made sense that one could cheat repeated addition for powers of two by bit shifting and not repeated addition on platforms that only have addition, but not multiplication.\n  \\[\\begin{aligned} 2^5 \u0026amp; = 2 \\times 2 \\times 2 \\times 2 \\times 2 \\\\ 2^5 \u0026amp; = 2 \u0026#43; 2 \u0026#43; 2 \u0026#43; 2 \\\\ \u0026amp; \u0026#43; 2 \u0026#43; 2 \u0026#43; 2 \u0026#43; 2 \\\\ \u0026amp; \u0026#43; 2 \u0026#43; 2 \u0026#43; 2 \u0026#43; 2 \\\\ \u0026amp; \u0026#43; 2 \u0026#43; 2 \u0026#43; 2 \u0026#43; 2 \\\\ \\end{aligned}\\]  Then I momentarily thought about square roots, because the square root of two can be written two ways:\n \\[\\sqrt{2} = 2^{\\frac{1}{2}}\\]  Using the mental framework with which my teachers had equiped me, meant that two is being multiplied by itself one-half times. This, of course, made no sense. How can one apply an operation a fractional amount of times? So then I wondered if looking at this in terms of addition would help, but that was a fractional amount too:\n \\[\\begin{aligned} p \u0026amp; = b^m \\\\ p \u0026amp; = sb \\\\ sb \u0026amp; = b^m \\\\ s \u0026amp; = b^{m-1} \\\\ \\end{aligned}\\]  Lets check our original example of  \\(2^5\\)   \\[\\begin{aligned} m \u0026amp; = \\log_2 2^5 = 5 \\\\ \u0026amp; \\text{and} \\\\ s \u0026amp; = 2^{m-1} = 2^4 \\\\ \\end{aligned}\\]  That checks out, but what about  \\(2^\\frac{1}{2}\\)  ?\n \\[\\begin{aligned} m \u0026amp; = \\log_2 2^{\\frac{1}{2}} = \\frac{1}{2} \\\\ \u0026amp; \\text{and} \\\\ s \u0026amp; = 2^{m-1} = 2^{-\\frac{1}{2}} \\\\ \\end{aligned}\\]  Of course, this is even more mystical because how does one apply addition ~0.707106 times? Fortunately, there\u0026rsquo;s a clue hidden in that  \\(\\log_2\\)  function. But it\u0026rsquo;s not super obvious exactly how that helps us, at least not upon first glance. Don\u0026rsquo;t worry we\u0026rsquo;ll get there.\nLogarithms Logarithms are interesting concept. Base ten logarithms let us know the magnitude of a decimal based number. A base two logarithm can let us know in which octave a frequency belongs. A base two logarithm can also let us know how many digits are needed to represent a number. Base two logarithms are found in measurements of entropy.\nMathematically, logarithms are pretty simple. They form a mapping from multiplication to addition:\n \\[\\log(a^m) \u0026#43; \\log(a^n) = \\log(a^{m}a^{n})\\]  Additionally, they have the following relationships:\n \\[\\begin{aligned} y \u0026amp; = b^x \\text{, the exponential function in base b} \\\\ x \u0026amp; = \\log_b y \\text{, the logarithm in base b} \\\\ \\end{aligned}\\]  Additionally, one can change the base of the logarithm simply by scaling the logarithm:\n \\[\\log_{b_2} y = \\frac{\\log_{b_1} y}{\\log_{b_1} b_2}\\]  Since, the base doesn\u0026rsquo;t matter, we can use the natural logarithm:\n \\[\\log_{b_2} y = \\frac{\\ln y}{\\ln b_2}\\]  The most commonly occuring logarithm is the natural logarithm, in base  \\(e\\)  :\n \\[\\begin{aligned} x \u0026amp; = \\ln e^x \\\\ \\end{aligned}\\]  Using the identities above we can get:\n \\[\\begin{aligned} y \u0026amp; = b^x \\\\ \\log_{b} y \u0026amp; = \\frac{\\ln y}{\\ln b} \\\\ \\log_{b} y \\ln b \u0026amp; = \\ln y \\\\ x \\ln b \u0026amp; = \\ln y \\\\ e^{x \\ln b} \u0026amp; = e^{\\ln y} \\\\ e^{x \\ln b} \u0026amp; = y \\\\ \\end{aligned}\\]  This means that if we can figure out a way to compute  \\(\\ln x\\)  and  \\(e^x\\)  for any value  \\(x\\)  , then we can compute any  \\(y = b^x\\)  by using  \\(y = e^{x \\ln b}\\)  . Fortunately, using calculus we can figure out approximations for these functions. The process of doing so is called analytic continuation.\nAnalytic Continuation One of the most common introductions to the natural logarithm (besides the relationships and maps above), is the simple integral:\n \\[\\ln(x) = \\int_{1}^{x}\\frac{dt}{t}\\]  This next graph is a combination of computing the area under the curve  \\(\\frac{1}{x}\\)  from 1 to 2 along with  \\(\\ln x\\)  ,  \\(e^x\\)  , and  \\(x\\)  :\n  As should be obvious from the chart above, the exponential and the logarithm are inverses of each other are are reflections along the values of  \\(y = x\\)  . This means that if we can calculate one of these we can calculate both just by transposing the coordinate values.\nThere\u0026rsquo;s a problem with this though. The above integral definition of  \\(\\ln\\)  is very limited in some important ways:\n It really can\u0026rsquo;t be extended into complex numbers, because the integral from  \\(1\\)  to  \\(a \u0026#43; b\\imath\\)  is not defined without specifying an exact curve over which to integrate. The full integral needs to be computed, which limits its practicality in calculating a number to a certain precision within a small number of operations.  Fortunately, there are easily found analytic definitions for these functions using the method of Taylor series expansion. As an added benefit, these support imaginary and complex numbers in their domain:\n \\[\\begin{aligned} e^x \u0026amp; = \\sum_{k=0}^{\\infty}\\frac{x^k}{k!} \\\\ \\ln x \u0026amp; = \\sum_{k=1}^{\\infty}\\frac{(-1)^{k\u0026#43;1}}{k}(x-1)^k \\\\ \\ln (1 \u0026#43; x) \u0026amp; = \\sum_{k=1}^{\\infty}{\\frac{(-1)^{k-1}}{k}}x^{k} \\end{aligned}\\]  There are some other identities that can come in handy because they tend to converge quickly. For when x falls with the complex unit circle:\n \\[\\begin{aligned} \\ln x \u0026amp; = 2\\operatorname{artanh}\\left(\\frac{x-1}{x\u0026#43;1}\\right) \\\\ \u0026amp; = \\sum_{k=0}^{\\infty}\\frac{1}{2k\u0026#43;1}\\left(\\frac{x-1}{x\u0026#43;1}\\right)^{2k\u0026#43;1} \\end{aligned}\\]  When x is outside the complex unit circle:\n \\[\\begin{aligned} \\ln x \u0026amp; = 2\\operatorname{arcoth}\\left(\\frac{x\u0026#43;1}{x-1}\\right) \\\\ \u0026amp; = \\sum_{k=0}^{\\infty}\\frac{1}{2k\u0026#43;1}\\left(\\frac{x\u0026#43;1}{x-1}\\right)^{-(2k\u0026#43;1)} \\end{aligned}\\]  There are some issues to be aware of around complex logarithms. To demonstrate these issues, we need Euler\u0026rsquo;s formula:\n \\[e^{\\theta\\imath} = \\cos\\theta \u0026#43;\\imath\\sin\\theta \\]  Wait! We need a more complicated formula:\n \\[\\begin{aligned} c^{a\u0026#43;b\\imath} \u0026amp; = e^{c \\ln a} e^{\\imath c \\ln b} \\\\ \u0026amp; = e^{c \\ln a} \\left( \\cos (c \\ln b) \u0026#43;\\imath\\sin (c \\ln b) \\right) \\end{aligned}\\]  Since this has a periodic aspect to it, that means there are infinitely many loagrithms of a complex number. This is important to keep in mind, since some of the formulae above don\u0026rsquo;t seem to mind this. For instance those hyperbolic identities above only give what is called the \u0026ldquo;principle value\u0026rdquo;. This means the other infinitude of values are neglected, but can be computed from this.\nPutting It All Together The analytic formulae all have summations between 0 or 1 and infinity. Computers don\u0026rsquo;t really like infinities because it takes them an infinite amount of time to deal with them. This means we\u0026rsquo;ve got to cheat. Cheating is easy: we just use a few terms of the analytic function. However, we still need to be mindful of the errors. The Taylor series really only has good accurracy for logarithms within a certain distance from the point we expanded the series around. In our case, that point is zero.\nSince we know that the logarithm and exponential are realy the same thing just rotated around the the identity function, we can choose which ever one has the better convergence and then iteratively solve for a value using a variant of Newton\u0026rsquo;s method. In the case using the exponential, we just need to be careful of the large values generated in the factorials. Then we iteratively converge on the value we know while solving for the exponent.\nUsing everything we know about logarithms and exponents, we can set up a way to solve for  \\(\\sqrt x\\)  :\n \\[\\sqrt x = e^{\\frac{1}{2}\\ln x}\\]  Visually, we can see these relationships as:\n  More generally, we can setup a general  \\(n^{th}\\)  root:\n \\[\\sqrt[n] x = e^{\\frac{1}{n}\\ln x}\\]  This means we have found a general mechanism for performing  \\(n^{th}\\)  roots, or, more awkwardly, multiplying x by itself  \\(\\frac{1}{n}\\)  times. But more than that, we have a general method for calculating roots, trigonometric functions, exponential and logarithmic functions themselves. Because of Euler\u0026rsquo;s formula, we can easily write:\n \\[\\begin{aligned} \\cos\\theta \u0026amp; = \\frac{e^{\\theta\\imath} \u0026#43; e^{-\\theta\\imath}}{2} \\\\ \\sin\\theta \u0026amp; = \\frac{e^{\\theta\\imath} - e^{-\\theta\\imath}}{2\\imath} \\\\ \\tan \\theta \u0026amp; = \\frac{e^{\\theta\\imath} - e^{-\\theta\\imath}}{\\imath(e^{\\theta\\imath} \u0026#43; e^{-\\theta\\imath})} \\end{aligned}\\]  All of these methods arise from the relationships found in one particular equation:\n \\[b^x = e^{x \\ln b}\\]  What Does This Mean? My preferred way of thinking about this, is integers are really a special case where our notational system happens to have the most simplicity for notating those numbers. They are points of minimal encoding, but they are just as complicated or information dense as any other algebraic number. This is how two infinite sums can be found in integer relationships to each other.\nBy asking the question I started with — \u0026ldquo;How do we multiply a number by itself a fractional number of times?\u0026rdquo; — we can find out new things about our numbers and operations. It is questions and answers like this which make me wonder what is more fundamental in terms of operations. Are fields with addition and groups with multiplication realy fundamental? Or is everything that we do really just an approximation or convergence of an infinity of terms reducing to a point for as long as it\u0026rsquo;s needed or convienient for our minds?\nIs anything as simple as  \\(2\u0026#43;1\\)  ? Maybe it all is as complicated as:  \\[\\begin{aligned} 2\u0026#43;1 \u0026amp; = e^{x \\ln 2} \\\\ x \u0026amp; = \\frac{\\ln 2 \u0026#43; 1}{\\ln 2} \\\\ 3 \u0026amp; = e^{\\ln 2 \u0026#43; 1} \\end{aligned}\\]  "});index.add({'id':1,'href':'/docs/narrative-culture/perceptual-zones/','title':"Perceptual + Narrative Zones",'content':" This is a draft of what will likely become a book detailing how our minds form culture based on shared experiences and a Nash-like equilibrium of cultural dynamics.\n Perceptual + Narrative Zones Perceptual Zones Each individual (an agent) has their own perceptual zone which differs from other people\u0026rsquo;s perceptual zones. The perceptual zones may overlap, but in many case they don\u0026rsquo;t. The perceptual zone is the combined whole of experience each individual is perceiving and sense-making at any given time.\n  Image 1Two visual perceptual zones looking towards each other and overlapping\n  There are at least two principal divisions of perceptual zones: Interior + Exterior. These different zones are also supported by the concepts of external and internal focalization in literature.\nThe exterior division is that created by the senses, presumably, which is possible to experience together with someone also physically present and presumably caused by a physicality (but could potentially be caused by a defect in perception, i.e. an illusion): brightness, color, smell, taste, texture, temperature, touch, movement, loudness, frequency, etc. It should be obvious that this is not necessarily entirely shared by all people, since some people lack color perception or visual perception entirely, some people cannot hear, etc.\nThe interior division is created by the mind reacting to the stream of input created by either the exterior perception, the imagination, or other feedback loops within itself: imagination, emotions, thoughts, inferences, anything one experiences which isn\u0026rsquo;t readily accessible or perceivable to a one whom is not a mind reader.\nUsually, human\u0026rsquo;s integrate perceptual zones into narratives. Narratives of stories are typically easy to remember.\nForming Narratives Every person is selective in what they choose to pay attention. Each person will create a different narrative about the events going on around them. Each person also has their own internal perceptions of their own internal state. A person forming a narrative about someone else will only draw upon the external qualities they perceive about someone else, unless there has been some interaction that allowed them to know another person\u0026rsquo;s interior state. If someone were able to only focus on external qualities and happenings, without any interpretation of those qualities and happenings and without implying anything, they might come to a very objective description of their limited view. In writing, this is known as external focalization. However, very rarely does anyone\u0026rsquo;s narrative about an experience happen in external focalization. Typically, it also includes a host of feelings, internal state, and assumptions about other people\u0026rsquo;s\u0026rsquo; internal state. Objective descriptions about what is going on can have an interesting effect, but it doesn\u0026rsquo;t read like internal thoughts.\nThis is an example of external focalization:\n Three ladies stood up after having sat and talked around a large, wooden table. The table\u0026rsquo;s wood stain was worn and fading from its age. The ladies had talked for over an hour. As they were walking towards the door, the barista called out, \u0026ldquo;See you all later.\u0026rdquo; They all waved, and continued talking as they walked. The three ladies walked out the coffee shop door and rounded a corner of the shop. They walked on a sidewalk bordered by rocks and a patch of grass and continued around around the other corner. They continued out to the parking lot next to the boardwalk along the docks.\nA giant fabric sign saying \u0026ldquo;ESPRESSO\u0026rdquo; in curvy all-caps waved in the breeze. Along the other side of the boardwalk, an American flag, US Army flag, US Navy flag, and US Marine flag all waved in a line. A lady wearing a blue shirt and black exercise crops walked a dog. They passed by on the other side of the window. The whole time I sat in my chair, wearing my green shirt, surrounded by my phone, tablet, battery pack, laptop, and camera all atop the wooden table.\n It is purely descriptive of the physical world and the readily perceivable. The compliment to this would be internal focalization. It would be filled with emotions, thoughts, and ideas of what might be going on inside another\u0026rsquo;s mind. For example:\n I am in a small coastal town in Oregon. I want coffee and a space to turn that coffee into words for my blog. I remember my last visit to this same town and the decent coffee shop I discovered by the harbor. As I drive there in the fog, I ponder what I\u0026rsquo;ll write. I am distracted by my enjoyment of the fog. It\u0026rsquo;s a nice break from the heat I just came from. I roll down my windows and expose my face to the cool moisture outside.\nI arrive and notice a inflated tube of fabric flailing about in the wind around the corner from the shop. Wondering if those things do anything to grab people\u0026rsquo;s attentions, I walk around to other side of the building. As I open the door and enter, I take in the scent of the coffee beans. The smell is enough to start invigorating me. This is now my second time visiting this year and I\u0026rsquo;m becoming used to this place and its wooden furniture. I feel I\u0026rsquo;m likely to return many times.\nI move to the counter to order. The barista is fumbling around trying get a few things in order behind the counter. I remember her as the barista that never talked to me last time. I can\u0026rsquo;t tell if she\u0026rsquo;s an introvert or if she just doesn\u0026rsquo;t like me. I\u0026rsquo;m not quick to judge. It might take a few more visits before she warms up to me. Eventually, she notices me and with a cold distance asks what I\u0026rsquo;d like. .I order my latte and oatmeal. I reach to grab my wallet out of my bag, but it\u0026rsquo;s not there. I left my wallet back in my car. I explain this hoping she won\u0026rsquo;t get upset with me. Fortunately she seems fine with the mishap. I leave to fetch my wallet and come back.\nI return and enter through the only door. There are two people impatiently waiting for her to even acknowledge their presence. They pace back and forth as though they might leave. After a short while, she notices me standing to the side of the counter and goes to enter my order into the register. She comes back and tells me my total. I hand her a twenty dollar bill and she fetches my change. The others are still waiting.\nFinally, she takes their order and payment. She finishes up their drinks fairly quickly. Once they step outside, she starts reading her book. I start thinking maybe she\u0026rsquo;s not the greatest with customer service or making use of down time to organize what she\u0026rsquo;ll need. While I\u0026rsquo;m observing all this, I unpack my digital goodies and set them haphazardly about me. A little disorganization helps me start writing.\n This internal narrative ascribes motivations and starts hinting towards goals for each agent in addition to outlining the state of mind and emotion of the agent described. It takes some of the guesswork out of why certain agents actions are what they are. On the other hand, it could also be used to highlight the different thought processes each agent possesses. It can also be used to create tension or conflict by having characters ascribe incorrect motivations, reasons, or other driving factors to the other characters actions.\nNow imagine if we could take two narratives about the same situation from different perspectives, both with internal focalization, and lay them side by side. We could see how they differ by how far away the lines are from each other. The closer the lines are, the more alike the perceptions are and the less likely conflict is to arise. The farther they are apart, the more different the perceptions are. We could even add a layer of external narratives in between the two internal narratives to see the differences in what each person experiences in the scene that others might also observe.\nImagine others\u0026rsquo; experiences sitting in the coffee shop with me. Some are travelers, while some are locals and regulars. All of them arrive at the shop and observe a subset of the same environment. Some of them might be self absorbed, others might be more focused on what is going on outside, and others might be focused on the other people in the room. We are all in the same location, there\u0026rsquo;s a bit of commonality there. Because of the selectivity of their attention, these experiences differ. Each person notices different aspects of the environment and would accentuate those bits in writing an objective description of their experience. Each person also has their own mental place and reason for being there. When people come to the same geographic location and the same room, their narratives get closer together in some dimensions \u0026mdash; if they\u0026rsquo;re paying attention to those dimensions.\nOne person might be at the coffee shop to focus on reading. Another couple might be getting a cup of coffee to wake them up while going on a walk. Others might be there to catch up over a cup of coffee. In many of the situations, the physical space is not as important as the function the coffee serves in their plans for the day or the closeness of the group\u0026rsquo;s interactions.\nIf we lay these individual strands of narrative beside one another, we\u0026rsquo;ll find a few different patterns. All of these individual strands of narrative get closer together once they enter the coffee shop. If the group of people sitting at the table conversing came from different places, their stands would start out further apart and begin to converge and become close to, but distinctly separate, from the other strands of narrative. Their individual experiences would be woven into narratives more similar than other narratives in the same room. Their narratives would be distinctly different from mine. I was just sitting down by myself to write my thoughts down. Their narratives would also be different from the lady behind me reading a novel, just that lady and my narrative differ by our action in the coffee shop.\nNarrative Diagrams Now that we\u0026rsquo;ve properly outlined the meaning and context behind the internal and the external narratives, these two strands can be used to weave a narrative diagram for one agent:\n  Figure 1   The main states any pair of narratives can occupy are either consonant or dissonant. The relative amount of space between narratives indicates the amount of consonance or dissonance. Sometimes there can be conflict between an agent\u0026rsquo;s internal narrative and external narrative, as indicated by dissonance between the two narratives. This is created through divergence between internal and external narratives, optionally any number of \u0026ldquo;false\u0026rdquo; narratives may be present.\n  Figure 2      Figure 3     When two narratives go from being consonant to being dissonant, they are said to diverge. When two narratives go from being dissonant to consonant, they are said to converge. This is represented in the diagram as divergence (Fig. 3) and convergence (Fig. 4).\n  Figure 4      Figure 5     Different kinds of false narratives can happen. A false narrative can either be congruent to one of the narrative strands or it can be congruent to none of the narrative strands. Typically it\u0026rsquo;s defined as being false compared to the internal narrative (an agent\u0026rsquo;s primary source of self- knowledge) or false compared to the reality and self-knowledge, as in Fig. 7, where it\u0026rsquo;s divergent and dissonant with both internal and external narratives.\n  Figure 6      Figure 7     An aspect of this way of diagramming situations is each of these diagrams lacks explicit detail and can represent many different situations. What it brings is a way of diagramming the spaces certain actors and relationships occupy \u0026ndash; it can emphasize the distance between mental space and physical space of both. Before delving into the ways this demonstrates relationships with others let us examine how it can demonstrate relationship with self.\nIn Fig. 1, the agent\u0026rsquo;s internal narrative and external narrative stay consonant and track one another as they both change. They could be riding a horse at a fast clip and their mind doesn\u0026rsquo;t wander, but stays in a flow monitoring their environment as close as possible.\nFig. 4 shows the agent\u0026rsquo;s internal and external narratives diverging. No \u0026ldquo;false\u0026rdquo; narrative is created in this case. This could be someone working on a hard problem at their computer, whiteboard, or couch, then leaving for a walk but their mind remains focused on the same problem, more distant from their immediate surroundings. Perhaps they were dreaming about taking a trip to place far away, arriving at the airport though they were still waiting in line to order lunch. Perhaps a tragic accident occurred and they are in shock or denial. Perhaps they went through puberty and look and act like a typical straight person, but despite what anyone else thinks, they are actually not straight and they make no attempt to mask that, but they don\u0026rsquo;t \u0026ldquo;code\u0026rdquo; for it either.\nFig. 5 shows the agent\u0026rsquo;s external narrative converging towards their internal narrative. This could indicate they were at work, but day dreaming of going and buying the latest Allen \u0026amp; Heath studio mixing console for their studio they also own and use during the weekends. Then as they leave work and go buy the mixing console, their external narrative comes into consonance with their internal narrative.\nFig. 6 is interesting because it diagrams an agent for whom an internal narrative has diverged from their external narrative (or v.v.), while they have created a separate internal narrative to match the external narrative, or, rather, to match what they believe other agents\u0026rsquo; internal narratives are for a corresponding external narrative. In contrast to this is Fig. 7, which is an outright lie created knowing full well what one\u0026rsquo;s external narrative is and actually being in agreement with it. The relationship of self to the perceivable worlds is incongruent in the case of Fig. 6, but the relationship of the false narrative is dissonant to the perceivable reality in Fig. 7.\nFig. 6 represents a life lived inauthentically or a moment where other\u0026rsquo;s impressions become the driving force. An example of this archetype would be someone \u0026ldquo;in the closet\u0026rdquo;. Perhaps they married someone they were expected to marry even if they were never sexually attracted to them. Perhaps they are transsexual and are living the role assigned to them at birth. In order to accomplish this, they have created a \u0026ldquo;false\u0026rdquo; narrative which is in great conflict with their internal narrative which is also dissonant with the perceivable reality (the external narrative). This places a great strain on an individual.\nThis could also represent the beginning of stereotype threat, where one\u0026rsquo;s internal narrative is quite different from what someone expects of you and you let their stereotypical projection onto you drive a false narrative. This may resolve itself quickly, or it might drive tensions with self for a while.\nHow do these strands of narrative interact with other people\u0026rsquo;s strands of narrative? This is where it gets interesting, because there are quite a few combinations. The basics are the same as laid out above. Instead of just one internal and external narrative, there become as many pairs as there are agents.\n  Figure 8Two agents\u0026rsquo; external narratives overlap in a shared perceptual field\n  Fig. 8 represents two people coming into the other\u0026rsquo;s perceptual fields, sharing part of their physical reality, but not much of their inner reality. This is the equivalent of the visual field overlap illustrated in Image 1. Two fields of perception come close enough that there is enough information to map one onto the other, even if imperfectly. There\u0026rsquo;s a lot of potential variation in these diagrams, especially if the inner narrative is allowed to cross over the external narrative to allow for people building similar thoughts and inner narratives.\nThe full set of possibilities is derived through the following rules:\n Apply one operation of:  Diverge Converge Transpose   Account for symmetries between the two agents to remove redundant relationships:  If the two agents can be transposed and it results in the same relationships between agents, then the state is symmetric. Clusters of consonances are typically always symmetrical, except that external narratives always represent a division into individuals so the order of the cluster does matter, since a transposition of the internal narrative across the external narratives is not symmetrical.      Figure 9The derivation of the 13 possible states from the rules described above\n  These configurations represent the following 13 states:\n  Two agents with external experiences which are closely congruent with one another. Their internal narratives are consonant with their external narratives, but they may be thinking of different things.\n This is a fairly common situation. It describes two people who have nearly overlapping spheres of perception, but yet are thinking about things which are different, yet may still reference the same objects in the possibly overlapping areas of their environment. This could be two people sitting at a counter in the same bar. They might even be talking to each other, but they haven\u0026rsquo;t yet reached the state where their minds are closer than their bodies, as in j.\n   Two agents with external narratives which are dissonant with one another. Their internal narratives are congruent with their external narratives, but they are definitely having different experiences.\n Wašté Wiŋ is riding her horse through a field completely engrossed in the glory of the shining sun at near noon and and the medicine she flys over while navigating the 6 directions. Her brother is sitting in a couch hidden in the shadows of their home\u0026rsquo;s basement playing video games, he is similarly in a state of flow [but this narrator doesn\u0026rsquo;t think it\u0026rsquo;s as healthy].\n   Two agents with consonant external narratives. One agent\u0026rsquo;s internal narrative is consonant with their external narratives, while the other agent\u0026rsquo;s internal narrative is dissonant with the all other narratives.\n Harriet and Oscar sit in their Scion as it glides across the mountain highway. Soon they will be at their destination. Harriet sits ponderously distant in the passenger seat while Oscar is immediately present taking curve around the mountain with ease.\n   Two agents with consonant external narratives. Each agent\u0026rsquo;s internal narratives are dissonant with their external narratives.\n Jillian and Sky sit side by side at the coffee shop. Though they are best friends, they have separate lives and each is focused on their tasks and emails whose invisible ties link them to friends and colleagues far away.\n   Two agents with dissonant external narratives. One agent\u0026rsquo;s internal narrative is distinctly dissonant with their external narrative. One agent\u0026rsquo;s internal narrative is consonant with their external narrative.\n Far away from his sister Tiffany, Arnold is engrossed in World of Warcraft so much so he forgets about how much his butt and bladder actually hurts from sitting so long focused on the virtual campaign he\u0026rsquo;s leading. Meanwhile, Tiffany is practicing yoga a state away, focusing on every bodily sensation and breath.\n   Two agents with dissonant external narratives. Each agent\u0026rsquo;s internal narratives are also distinctly dissonant with their external narratives.\n Jasmine reclines in her hammock in Mars Colony One\u0026rsquo;s residence hall. She is dreaming of the vast cosmos and the most recent fast radio burst (FRB) which was detected. She ponders if there is another intelligence here in the universe. Meanwhile back on Earth her distant cousin Marta is laying on the reddish-brown clay soil next to the river and the red willows which surround her in her Nevada homelands. Her mind is thinking about how all of life is one organism, still sharing most of its original DNA and RNA, constantly searching out new forms and ways of being. She realizes she is just one branch of the tree turned sideways in time which we call humanity. Each part has something to offer and something to learn from every other part \u0026ndash; if we can really call anything an \u0026ldquo;other\u0026rdquo;.\n   Two agents with consonant external narratives. Their internal narratives are more consonant with each other than their external narratives.\n Eugene and Jackie are naked in bed on top of each other. Their minds are just as entwined in each other as their bodies are, each thinking of how in the moment to best pleasure the other. Their bodies writhe together in undulating passion.\n   Two agents with dissonant external narratives. Their internal narratives are consonant with each other and consonant with one external narrative.\n Jared is a remote client joining a conference with Tina, the lead architect. She is screen sharing her laptop screen while she sits in an office conference room talking about the building design on her screen. Both are focused on what\u0026rsquo;s going on in the conference room, and not what\u0026rsquo;s happening at Jared\u0026rsquo;s physical location.\n   Two agents with consonant external narratives. Their internal narratives are consonant with each other, but dissonant from their external narratives.\n Mario and Luigi are playing their Sega Genesis, each embodying their in-game characters while they both sit on the couch. Both of their minds are occupied by the same in game experiences, while their bodies also share the same physical environment.\n   Two agents with dissonant external narratives. Their internal narratives are more consonant with each other, but dissonant from their external narratives.\n Janet and Manuel are each in different states on their distinct couches playing Second Life. They happen to be chatting in game at a bar. They haven\u0026rsquo;t seen each other in a long time and are excited to catch up, even if it is just virtually.\n   Two agents with dissonant external narratives and dissonant internal narratives. One agent\u0026rsquo;s internal narrative is more closely consonant with the other agent\u0026rsquo;s external narrative.\n Justine, a web developer, sets up a livestream of herself coding. While she may be sitting in front of a computer programming, most of the abstract concepts she grapples with are very distant from the physical plane. Chris, who is not familiar with programming at all, tunes into the livestream to watch and get away from the worries of his life and puzzles over the livestream of someone typing at a desk before switching from YouTube to ESPN.\n   Two agents with dissonant external narratives and dissonant internal narratives. Both agent\u0026rsquo;s internal narratives are consonant with the other agent\u0026rsquo;s external narrative.\n Chadricia and Patwyn are are performing an experiment with VR and telepresence over Internet2. They are each in different countries: Chadricia is in London, UK while Patwin is in California, USA. They each wear a VR headset with a camera and x-y microphone setup. Instead of augmented reality where each person\u0026rsquo;s perception is modified and then fed back to the same person, they are experiencing each other\u0026rsquo;s perspective instead of their own.\n   Two agents with consonant external narratives and dissonant internal narratives. Both agent\u0026rsquo;s internal narratives are consonant with the other agent\u0026rsquo;s external narrative.\n Bianca wakes up next to her newborn son she just slept with outside her body for the first time, but realizes she is experiencing all the bodily sensations of her newborn and feels her own body pressing up against the tiny body she is experiencing. She thinks to herself, Could my baby be experiencing a dream of being older and having my form?\n   Enumerating the transitions from each option to the next option, will not be undertaken in the present work, but it does enumerate to 78 (13 choose 2) possible transitional archetypes of movements through both internal and physical space. As the magnitude of the changes can differ, this offers a near infinite amount of variety.\nA Deeper Look at False Narratives False narratives are narratives which are inserted between internal and external narratives (between self) or between external narratives (between selves). In other words, a false narrative can be about internal conflict and inauthenticity to self (type a) or lies (type b). The list of situations which fall under type a is staggering.\nEach of the diagrams presented above leave out any mention of false narratives. This is because including them would complicate matters and make the archetypes even harder to understand. However, wherever there is divergence/dissonance between two agents or divergence/dissonance between one agent\u0026rsquo;s internal and external narrative, a false narrative can be inserted. This means that a subset of seven of the diagrams [c,b,d,e,f,k,l] can be easily mutated to include one or more false narratives.\nWhat about false beliefs? Can these be represented in these diagrams? A false belief would be woven into the the fabric of one\u0026rsquo;s internal narrative regardless of any external narrative past of present. This would manifest itself is as a rift between internal narratives, one containing the false belief and one not containing the false belief, in a conversation where a counterexample to the false narrative is not present in consonant external narratives. It could also manifest itself as a divergence between an internal narrative containing the false belief and consonant internal and external narratives containing a counterexample to the false belief. Agents who do not hold the false belief, but an internal narrative holding a belief in harmony with their external narrative containing a counterexample negating the false belief may be able to highlight the false belief in a diagram by diagramming a false narrative which is co-divergent and consonant with the narrative containing the false belief.\nThere is a structural similarity between false narratives and narratives containing false beliefs \u0026mdash; diverging internal narratives, possibly also diverging from an external narrative \u0026mdash; a false belief is labeled with with a false narrative which is consonant with the internal narrative containing the false belief; while a false narrative corresponding to a stereotype threat, internal conflict, or inauthentic life is consonant with the external narrative or other agents\u0026rsquo; internal narratives. In essence, a stereotype threat is one labeling others internal narratives as containing false narratives. This is probably why these situations can be so difficult to speak of in detail. It becomes an us vs. them situation. In some cases, the facts in the external narratives have no correlation to the nature of what or whom is observed despite an internal narrative specifying a false correlation. This is an example of what can lead to stereotype threat. In other cases the internal narrative holds onto a belief which is completely counterfactual. This would be the difference between a man falling to peer pressure or a stereo type threat and playing basketball instead of going into music and a Mexican being a good person despite Trump\u0026rsquo;s lies about all Mexican\u0026rsquo;s being criminals.\n Damasio A (2011) The quest to understand consciousness. TED2011. Gilbert D (2011) The Social Psychological Narrative, or, What Is Social Psychology, Anyway? Edge Conversation. June 7. Wilson TD (2011) Redirect: the surprising new science of psychological change. New York, NY: Little, Brown and Company. Popova M (2011) Redirect: A New Way to Think About Psychological Change. Brain Pickings. September 9. Schultze U, Leahy MM (2009) The Avatar-Self Relationship: Enacting Presence in Second Life. ICIS 2009 Proceedings. 12. Boroditsky L. Entire Research Boroditsky L. How language shapes the way we think Alvarez-Melis D, Jaakkola TS. Gromov-Wasserstein Alignment of Word Embedding Spaces. arXiv:1809.00013 [cs.CL]. Lou J, Cao Y, Barzilay R (2019) Neural Decipherment via Minimum-Cost Flow: from Ugaritic to Linear B. arXiv:1907.06718 [cs.CL]. Matheson R (2018) Model paves way for faster, more efficient translations of more languages. TechXplore. October 31. Smith K (2011) Learning Bias, Cultural Evolution of Language, and the Biological Evolution of the Language Faculty. Human Biology. 83(2): 261-278 Sandler W (2018) The Body as Evidence for the Nature of Language. Frontiers in Psychology. 9: 1782. Sandler W, Aaronoff M, Meir I, Padden C (2011) The gradual emergence of phonological form in a new language. Nat Lang Linguist Theory. 29(2): 503-543. Sandler W, Meir I, Padden C, Aaronoff M (2005) The emergence of grammar: Systematic structure in a new language. PNAS. 102(7): 2661-2665. Langus A, Mehler J, Nespor M (2017) Rhythm in Language acquisition. Neuroscience \u0026amp; Biobehavioral Reviews. 81-B: 158-166. Goldin-Meadow S, Yang C (2017) Statistical evidence that a child can create a combinatorial linguistic system without external linguistic input: Implications for language evolution. Neuroscience \u0026amp; Biobehavioral Reviews. 81-B: 150-157. Crain S, Koring L, Thornton R (2017) Language acquisition from a biolinguistic perspective. Neuroscience \u0026amp; Biobehavioral Reviews. 81-B: 120-149. Yang S, Crain S, Berwick RC, Chomsky N, Bolhuis JJ (2017) The growth of language: Universal Grammar, experience, and principles of computation. Neuroscience \u0026amp; Biobehavioral Reviews. 81-B: 103-119. Del Giudice A (2012) The emergence of duality of patterning through iterated learning: Precursors to phonology in a visual lexicon. Language Cognition. 4(4): 381-418. Verhoef T (2012) The origins of duality of patterning in artificial whistled languages. Language Cognition. 4(4): 357-380. Verhoef T, Kirby S, de Boer B (2015) Iconicity and the Emergence of Combinatorial Structure in Language. Cognitive Science. 40(8): 1969-1994. Kirby S (2017) Culture and biology in the origins of linguistic structure. Psychonomic Bulletin \u0026amp; Review. 24(1): 118-137. Kirby S, Cornish H, Smith K (2008) Cumulative cultural evolution in the laboratory: An experimental approach to the origins of structure in human language. PNAS. 105(31): 10681-10686. Lumaca M, Ravignani A, Baggio G (2018) Music Evolution in the Laboratory: Cultural Transmission Meets Neurophysiology. Frontiers in Neuroscience. 12: 246. Garimella A, Mihalcea R, Pennebaker JW (2016) Identifying Cross-Cultural Differences in Word Usage. COLING. Shachaf, P. (2008). Cultural diversity and information and communication technology impacts on global virtual teams: An exploratory study. Information and Management, 45(2), 131‐142. Kleinsmith A, De Silva PR, Bianchi-Berthouze N (2006) Cross-cultural differences in recognizing affect from body posture. Interacting with Computers. 18(6): 1371\u0026ndash;1389. \u0026mdash; PDF Graham JA, Argyle M (1975) A cross‐cultural study of the communication of extra‐verbal meaning by gestures. International Journal of Psychology. 10(1): 57-67. Elfenbein HA, Ambady N (2003) Universals and Cultural Differences in Recognizing Emotions. Current Directions in Psychological Science. 12(5): 159-164. \u0026mdash; PDF Kastrup B (2018) Should Quantum Anomalies Make Us Rethink Reality?. Scientific American. April 19. Gopnik A (2011) What do babies think? TEDGlobal 2011. Meltzoff AN. Entire Research Antinori A, Carter OL, Smillie LD (2017) Seeing it both ways: Openness to experience and binocular rivalry suppression. Journal of Research in Personality. 68: 15-22. Salience network response to changes in emotional expressions of others is heightened during early adolescence: relevance for social functioning Interpersonal Influences on Body Representations in the Infant Brain Body maps in the infant brain Neural body maps in human infants: Somatotopic responses to tactile stimulation in 7-month-olds Shen G, Meltzoff AN, Marshall PJ (2018) Touching lips and hearing fingers: effector-specific congruency between tactile and auditory stimulation modulates N1 amplitude and alpha desynchronization. Exp Brain Res. 236: 13. https://doi.org/10.1007/s00221-017-5104-3 Learning to make things happen: Infants\u0026rsquo; observational learning of social and physical causal events Children\u0026rsquo;s Representation and Imitation of Events: How Goal Organization Influences 3‐Year‐Old Children\u0026rsquo;s Memory for Action Sequences Preschoolers\u0026rsquo; mathematical play and colour preferences: a new window into the development of gendered beliefs about math Neural mirroring mechanisms and imitation in human infants Neural mirroring systems: Exploring the EEG mu rhythm in human infancy The development of gaze following and its relation to language Exploring the relation between memory, gestural communication, and the emergence of language in infancy: a longitudinal study Bilingual experience and executive functioning in young children Infant gaze following and pointing predict accelerated vocabulary growth through two years of age: a longitudinal, growth curve modeling study The Centrality of Motor Coordination and Proprioception in Social and Cognitive Development: from Shared Actions to Shared Minds Early imitation within a functional framework: The importance of person identity, movement, and development Human infant imitation as a social survival circuit Synchronized movement experience enhances peer cooperation in preschool children \u0026ldquo;Catching\u0026rdquo; Social Bias: Exposure to Biased Nonverbal Signals Creates Social Biases in Preschool Children Neuroscience, psychology, and society: Translating research to improve learning Transfer of Social Learning Across Contexts: Exploring Infants\u0026rsquo; Attribution of Trait‐Like Emotions to Adults The Development of Math\u0026ndash;Race Stereotypes: \u0026ldquo;They Say Chinese People Are the Best at Math\u0026rdquo; Imitation as a mechanism in cognitive development: a cross-cultural investigation of 4-year-old children\u0026rsquo;s rule learning Infant, control thyself: Infants\u0026rsquo; integration of multiple social cues to regulate their imitative behavior Saby JN, Meltzoff AN, Marshall PJ (2013) Infants\u0026rsquo; Somatotopic Neural Responses to Seeing Human Actions: I\u0026rsquo;ve Got You under My Skin. PLoS ONE 8(10): e77905. https://doi.org/10.1371/journal.pone.0077905 Meltzoff AN, Moore MK (1997) \u0026ldquo;Cognitive foundations and social functions of imitation and intermodal representation in infancy.\u0026rdquo; Becoming a Person. Martin Woodhead, Ronnie Carr, Paul Light, eds. Routledge. 3rd edition. Meltzoff AN, Gopnik A (2013) \u0026ldquo;Learning about the mind from evidence: Children\u0026rsquo;s development of intuitive theories of perception and personality.\u0026rdquo; Understanding Other Minds: Perspectives from Developmental Social Neuroscience. Simon Baron-Cohen, Helen Tager-Flusberg, Micheal V Lombardo, eds. Oxford University Press. 3rd edition. Skinner AL, Meltzoff AN (2018) Childhood Experiences and Intergroup Biases among Children. Social Issues and Policy Review. 13(1): 211-240. Doucleff M, Greenhalgh J (2019) \u0026ldquo;How Inuit Parents Teach Kids To Control Their Anger\u0026rdquo; Goats and Soda. NPR. March 13. Brooks D (2011) The social animal. TED2011. Vinokurov K (2018) Challenging the perception of belonging. TED@Merk KGaA. Benjamin R (2015) My road trip through the whitest towns in America. TEDWomen 2015. Ryan P (2010) Don\u0026rsquo;t insist on English! TEDxDubai. Davis W (2003) Dreams from endangered cultures. TED2003. Barrett LF (2017) You aren\u0026rsquo;t at the mercy of your emotions \u0026mdash; your brain creates them. TED@IBM. Bejan T (2018) Is civility a sham? TED Salon: Brightline Initiative. Cynthia Ma Shwe Sin Win (2014) Not good with names: Local name customs in a global village. TED@State Street. - Maybe? Shafak E (2017) The revolutionary power of diverse thought. TEDGlobal\u0026gt;NYC. - Maybe? Popova M (2011) Monoculture: How Our Era\u0026rsquo;s Dominant Story Shapes Our Lives. Brain Pickings. September 2. Derman E (2010) METAPHORS, MODELS \u0026amp; THEORIES. Edge Conversations. November 30.  "});index.add({'id':2,'href':'/docs/resume/','title':"Resume",'content':"Download as a PDF\nSummary Experienced full-stack software developer, technical consultant, and project manager helping to minimize complexity, improve product performance, and increase product value. Varied applied knowledge base with a reputation for seeing the big picture down to the small details and making business visions a reality.\nExperience Crowd Supply, Portland, OR — Lead Architect APR 2018 - SEP 2019  Responsible for the main Crowd Supply website and system administration. Streamlined our shipping pipeline by building a new system to print shipping labels directly to a Zebra printer within the Crowd Supply admin interface. Increased site reliability by offloading tasks to a job queue. Rebuilt the reporting pipeline. Began the process of integrating our systems with Mouser Electronics. Created the check-in software for the our Teardown conference. Created one of the logic puzzles for Crowd Supply’s annual conference, Teardown 2019 [see the final assembly and the puzzle in action].\nGeeks Without Bounds, Planet Earth — Technologist \u0026amp; Trainer JUL 2017 - 2019  National support for small to medium community organizations and nonprofits in low resource environments. Met with leaders to discuss needs and prioritize plans. Created community solutions using open source technologies when possible. Taught classes and workshops on multiple topics to adults and children including power systems, networking, and general technological skill building.\nAppNexus, Portland, OR — Senior Software Engineer DEC 2013 - DEC 2016  Contributed to many projects cutting across our entire stack from the advertiser and publisher UI applications, core API, data pipeline, and reporting. Aided design and implemented access control and policy restrictions across the UI and API. Created a D3 based charting system for analyzing key monetization metrics. Played a key role in optimizing the joining of data retrieved from multiple services. Prevented major incidents by proactively watching architecture changes and making sure unowned API services impacted by those changes were updated in time. Diagnosed problems arising from networking issues in the interaction of multiple microservices. Quickly learned about all of the myriad systems at AppNexus, including our adserver written in C. Provided 1:1 mentoring to help share knowledge of systems and programming practices.\nTechnologies: JavaScript (browser and Node.js), D3, React, Jasmine, Mocha, Grunt, Gulp, Webpack, PHP, PHPUnit, Zend framework, Composer, Python, Scala, Java, Akka, Play, Hadoop, Kafka, C, Less, Sass, CSS, Hive, Vertica, MySql, PostgreSQL, RabbitMQ, Redis, Apache, Nginx, Puppet, Tendril (an internal application deployment framework written in Python), Jenkins, tcpdump, Linux, OS X, sbt, Maven\nAda Burrows, Portland, OR — Technologist NOV 2008 - NOV 2015  Communicated with clients to arrive at a deep understanding of client business needs. Leveraged and extended clients’ existing technologies. Leveraged existing open source technologies and/or implemented custom code to meet client needs. Implemented custom applications using easily maintainable technologies. Provided documentation, training, and customer support. Provided time and/or cost estimates.\nTechnologies: PHP, JavaScript (browser and Node.js), Ruby, Java, Scala, Python, C++, Go, Rust, HTML, Less, Sass, CSS, Zend framework, CodeIgniter, CakePHP, WordPress, Drupal, OpenBravo POS, Django, QT, NVIDIA CUDA, Apache httpd, NGINX, PostgreSQL, MySQL, MongoDB, CouchDB, Redis, ZeroMQ, beanstalkd, BIND, PowerDNS, Icecast, Jitsi, Windows, OS X, Linux, VirtualBox, Chef, Puppet, Capistrano, Arduino, Raspberry Pi, NVIDIA Jetson TK1\nPuppet Labs, Portland, OR — Software Developer APR 2012 - DEC 2013  Performed a wide variety of roles including: front end developer, back end developer, Puppet module developer, security analyst, and subject matter expert. Contributed to nearly every component in our commercial product. Often looked to for expert knowledge of PE and it’s architecture.\nTechnologies: HTML, SVG, CSS3, JavaScript, CoffeeScript, jQuery, Batman.js, Underscore, Backbone, Marionette, Aura, D3, Require.js, Jasmine, Spyon, PhantomJS, Ruby, Rack, Sinatra, Rails, RSpec, Capybara, Selenium Webdriver, Sauce Labs, Apache HTTPD, ActiveMQ, Puppet, MCollective, MySQL, PostgreSQL, SQLite, Linux, Windows, OS X, Solaris, AIX, VirtualBox, VMware Fusion, Vagrant\nCD Baby, Portland, OR — Application Developer JAN 2012 - APR 2012  Developed front end, middleware, and back-end systems on several HostBaby products. Lead development on new features. Initiated pair programming sessions. Mentored our front-end developer. When hard bugs hit, I gathered the team together in group brainstorming sessions. Encouraged coworkers to join the larger Portland, OR tech community and brought several co-workers to events.\n Developed a music player which maintains state across page navigation, reloads, and between multiple instances while preventing multiple instances from playing at once. Implemented a sharing mechanism to share the player\u0026rsquo;s currently playing track on Facebook and dealt with last minute changes in Facebook’s API.  Technologies: JavaScript, jQuery, jQuery UI, HTML5, CSS3, PHP5, Zend, CodeIgniter, MySQL, Postfix, AWK, SED, BASH, Linux, OS X, VirtualBox\nProlegic Enterprises, Portland, OR — Lead Technologist MAR 2010 - NOV 2011  Led the design and implementation of uLynk’s mobile marketing platform and analytics dashboard. Gathered customer requirements. Ensured customer needs were met in a timely manner. Integrated our platform with customer’s existing web properties.\n Implemented an online business platform with integrated payment \u0026amp; billing system. Led migration from our in-house SMS infrastructure with high overhead to a cloud based SMS messaging provider. This resulted in 10x more SMS messages per minute. Implemented HTTP API clients for SMSified, Sage Payments, Kannel, Facebook, and oAuth2 services.  Technologies: CSS, XHTML, JavaScript, PHP5, Node.js, C#, SQL, MySQL, Kannel, Apache HTTPD, NGINX, Linux, Windows, OS X, VirtualBox\nDreamfish, San Francisco, CA — Platform Developer \u0026amp; Project Manager SEP 2010 - OCT 2010  Developed process guidelines and documentation for agile project management. Evaluated user stories and prioritized them for development. Wrote tasks from user stories. Evaluated progress, identified problem areas and provided feedback. Facilitated communication between team members.\nTechnologies: CSS, HTML, JavaScript, jQuery, PHP5, Elgg, WordPress, Java, Etherpad, MySQL, Apache HTTPD, Linux, Amazon EC2, VirtualBox\nValley Business Solutions, Corvallis, OR — Lead Technologist JUN 2009 - SEP 2009  Member of a short-lived Corvallis startup. Programmed framework for scheduling app. Provisioned Amazon EC2 instance for serving PHP, Ruby \u0026amp; Java with MySQL \u0026amp; PostgreSQL databases. Installed \u0026amp; configured OpenBravo ERP, Apache OFBiz, Liferay, and Alfresco enterprise software.\n Designed original theme for Corvalligator, a branch of Portland\u0026rsquo;s Calagator project. Designed scheduling algorithm for scheduling application based on dividing time into a quantized vector space.  Technologies: CSS, XHTML, JavaScript, PHP5, Ruby, Rails, Java, MySQL, PostgreSQL, Linux, VirtualBox\nSelf Employed — Technologist 1998 - 2006  Worked as an IT freelancer in Lincoln, NE, and Oklahoma City, OK. Projects included computer \u0026amp; network maintenance, VBA programming, webmaster \u0026amp; hosting provider.\nEducation Union College, Lincoln, NE — Studied Music Education, Chemistry, Math, Computer Science, \u0026amp; Theology 2003 - 2006  Activities and Societies: Member of education, music, computer, business, and math \u0026amp; science clubs; wind ensemble, vocal octet, concert choir, handbell ensemble, and saxophone quartet.\n"});index.add({'id':3,'href':'/docs/nkp/introduction/','title':"What is Programming About?",'content':"Next\n This is a work in progress. It will likely become a book at some point.\n What is Programming About? Originally, computers were people hired by the government or other large business. They would do large numbers of potentially complicated computations by hand and file the results back and forth. \u0026ldquo;Programming\u0026rdquo; back then was figuring out how all of the work for a computation should be doled out to individuals or groups and how results from one group should be given to another group for further computation. Programming is mostly an operations problem involving the management of dependencies between parts of the problems and the communication of the results to other parts of the computation.\nAs technology evolved, there were several factors which converged to create computing as it is today. Logicians and mathematicians did a lot of leg work to develop the core concepts of representing ideas as numbers. People working in business communications wanted to make a lot of their work more efficient, so they developed techniques to use technology to transfer information quickly. People were attempting to sove large problems which couldn\u0026rsquo;t be solved by people within the time constraints allowed by war. This lead to a lot of developments which all converged under the pressure of war to create computers. Once the transistor was made and integrated circuits were perfected, the cost of computing went down drastically. This got businesses hooked because it became cheaper to do the same amount of computation. The cost was reduced because fewer people (remember the \u0026ldquo;computers\u0026rdquo; of the past?) needed to be employed and fewer tools needed to be purchased (although semiconductor companies were quite fond of pushing new tools every two years), additionally the cost of the computers went down because they where manufactured at scale.\nThis means we can disect programming and computing into three main dimensions:\n Arithmetic Logic Communication  Even today, one of the largest applications of computing is Facebook. Facebook is quite simply a Sumerian pipe dream of recording and accounting as much as possible about our lives and intereactions with businesses. Facebook tabulates each of the likes (and recently, other reactions, \u0026ldquo;love\u0026rdquo;, \u0026ldquo;care\u0026rdquo;, \u0026ldquo;haha\u0026rdquo;, \u0026ldquo;wow\u0026rdquo;, \u0026ldquo;sad\u0026rdquo;, and \u0026ldquo;angry\u0026rdquo;) on posts and comments, building up a complete accounting of interactions on their platform. Despite thinking of Facebook as a communication platform, they are really an accounting platform. This of course, fits in perfectly with the business side of the application, which is advertising.\nMany of the games we\u0026rsquo;ve played through the ages are based on a type of rule based accounting. Eliminate peices off a board by moving in certain ways (Chess and Checkers). Lay down a certain pattern of cards, which according to the rules, tabulate to a higher score (card games). Roll a higher number with the dice (most games of chance). Form the longest words with rare letters to get the highest score (Scrabble). Form the largest patches of area using black or white stones, with a lot of other rules dictating the protocol of the game (Go). Even if we were come up with an emotional game, we would probably adapt the rules of golf to minimize the number of negative reactions one garners before making everyone happy (I suppose we could count comedy as this game).\nMany of the things we care about in our many cultures are all based on some form of math and logical thinking. In the games laid out above, we can see the three main areas of arithmetic, logic, and communication embodied. In a card game one has to add up the values of the cards, logically ensure they\u0026rsquo;ve followed the rules (and perhaps deduce the likelihood of other people having certain cards), and the communication is embedded in the visibility of the cards and people\u0026rsquo;s facial expressions. Even in cooking we use a rough arithmetic of proportions, a logic of how and when the ingredients are added together, and communication of how to propagate the knowledge of those foods. The same could be said for music, weaving, and many other things.\nTo reiterate, programming is the art and science of managing the transfer of information over a vastly complex communications network between the peripherals, many forms of memory, and processing centers within each processor. Most data centers and large distributed systems have the complexity of galaxies of communications systems all tied together and multiple worlds of processors all tied together. Now days, with all the web applications we have, the complexity of the communications between the various components of the distributed system has become even more complex. In some ways, it\u0026rsquo;s a wonder we\u0026rsquo;ve even bothered building the complex behemoths we\u0026rsquo;ve built. In other ways, it\u0026rsquo;s the obvious outcome of a culture bent on the \u0026ldquo;scientific management\u0026rdquo; method of maximizing profit and poductivity while minimizing cost through planning, scheduling, and standardization.\nThe Four Bases of Computing The necessary developments which lead to computers and programming mostly fell along four divisions:\n Business and Military Management Mathematics Communications Engineering  Business and Military Management Basis We started counting and started realizing the benefit of keeping symbols around as a proxy for the counted. Then we started managing the way things were built. Then we started managing how people worked. As a result of the pressures and converging technologies programming became the art of managing the computers. Nowdays, we even have arbitrary levels of managers to manage the computer managers (programmers).\n 5000 BCE — Sumerians start recording inventories, loans, taxes, business transactions, or even complaints. For a longer overview of logistics through the ages see Tepić, J., Tanackov, I., \u0026amp; Stojić, G. (2011). Ancient logistics–historical timeline and etymology. Tehnički vjesnik, 18(3), 379-384. 4000 BCE — Egyptians use various methods of planning and organizing labor. There is evidence of this also happening near the coast of Peru (irrigation canals of Zaña Valley, the Aspero complex in Peru). Unfortunately, what happened with in the central Andes of Peru is typically never figured into the history because of how imperial conquests typically go. 1721 — John Lombe\u0026rsquo;s water powered silk mill. 1765 — Europe starts using interchangeable parts again. This was a concept used before 200BCE, but it never really seems to have taken off except in times of war. 1766 — Matthew Bolton\u0026rsquo;s Soho Manufactory. 1776 — The Wealth of Nations lays out how division of labor is responsible for economic growth. This is most definitely not the first dicussion of division of labor, as it has been discussed in multiple locales since at least 1100 BC. This kind of thinking of single purpose laborers leads to thoughts about floor plan optimization, communication between distant parts of a business, and the shape of the human \u0026ldquo;computers\u0026rdquo; and their work follows from this thought. Even the layout of modern processors also follows from this thought. 1795 — Eli Terry Sr., my 3rd cousin 5x removed, invents a milling machine and begins making interchangeable parts for clocks along with an assembly line. He is resposible for making clocks affordable to the avarage person. As a side note, he was an anti-slavery abolitionist and his house had a secret room for runaway slaves. 1814 — Francis Cabot Lowell created the Boston Manufacturing Company which was the first vertically integrated manufacturing plant taking in raw materials and outputing final products. This became the Lowell System. 1830 — Antoine-Henri Jomini coined the French word logistique (rising from the French logis meaning lodgings) in his Précis de l\u0026rsquo;Art de la Guerre (Summary of the Art of War). His definition was \u0026ldquo;\u0026hellip; the art of well-ordering the functionings of an army, of well combining the order of troops in columns, the times of their departure, their itinerary, the means of communication necessary to assure their arrival at a named point \u0026hellip;\u0026quot;. 1869 — U.S. Intercontinental Railroad completed. 1883 — Standard time zones are adopted by the railroads in order to synchronize schedules. 1904 — Harrington Emerson\u0026rsquo;s \u0026ldquo;betterment work\u0026rdquo; begins at Santa Fe Railway. Bonuses were introduced as positive feedback for good performance. Time studies were and an effort was made to ensure normal people would be used as to not set too high a bar for performance. Tools were standardized so that anyone could pick up a task and have the right tools. Improved methods of cost accounting were introduced. All work and tasks were assigned through a central board that displayed the status and assignments for everyone and everything. 1910-1915 — Henry Gantt invents the Gantt Chart. This is used in planning things during WWI. 1911 — Frederick Winslow Taylor published The Principles of Scienctific Management. His disciple, Charles Edward Knoeppel, also published Maximum production in machine-shop and foundry. 1912 — Lillian + Frank Gilbreth author A Primer of Scientific Management. 1914 — Lillian Gilbreth\u0026rsquo;s thesis is published: The Psychology of Management: the Function of the Mind in Determining, Teaching and Installing Methods of Least Waste. 1915 — Knoeppel publishes Installing efficiency methods. 1917-1919 — Knoeppel Publishes six volumes under the title Organization and administration. 1920s — Mary Parker Follett\u0026rsquo;s understanding of lateral processes within hierarchical orgs led to a matrix organization at DuPont. Charles Bedaux built on the work of Frederick Winslow Taylor and Charles Edward Knoeppel. 1921 — Lillian + Frank Gilbreth introduce flow process charts in \u0026ldquo;Process Charts, First Steps in Finding the One Best Way to Do Work\u0026rdquo;. 1922 — Leon P. Alford starts pushing systematic management. Later he works with Alexander Hamilton Church and some of there ideas were extensions of Charles Babbage\u0026rsquo;s thought. 1924 — Walter A. Shrewhart at Bell Labs invents the control chart. That same year or the next, W. Edwards Deming learns of this new method and takes it with him at the United States Department of Agriculture, United States Census Bureau, and eventually became a statistical consultant to the Supreme Commander for the Allied Powers during WWII. 1931 — Wassily Leontief moves from the Institute for the World Economy to the US National Bureau of Economic Research and during WWII served as a consultant to the US Office of Strategic Services. He developed Input-Output analysis, for which he earned the Nobel Prize in Economics. 1937 — Operations Research became an embryonic field as Great Britain geared up for WWII. 1939 — Leonid Kantorovich intruduces the concepts behind linear programming. Kantorovich, L.V. (1939). \u0026ldquo;Mathematical Methods of Organizing and Planning Production\u0026rdquo;. Management Science. 6 (4): 366–422. doi:10.1287/mnsc.6.4.366. JSTOR 2627082. 1949 — Wassily Leontief uses the Harvard Mark II to model the US economy based on various sectors of industry.  Mathematics Basis This likely developed hand in hand with the business and military espects, but is interesting for the independence pure mathmatics obtained. At the core of programming today\u0026rsquo;s technological marvels is the concept of a symbol standing in for another symbol. Gödel, Church, Turing, and Hopper all pushed this a level further each. Gödel came up with a system of encoding logic using arithmetic and later a general system of recursive functions. Church built upon this creating a lambda calculus of computation. Turing built upon it creating a non-physical mechanical system that encoded logic and values in an infinite memory. Hopper realized that this could be extended to create a higher level language of certain values encoding for other values specific to the machine they were meant to operate on. This same principle became extended more and more until we could use math to display video mapped on a Cartesian coordinate system which was then mapped again back into a linear address space and extended until we could encode audio as binary digits. Then, in the 1980s, we discovered methods of compression which were necessary to make multimedia computing and the Internet work gicen the limited resources we had attained at the time.\n 2700-2300 BCE — Sumerian abacus. They used a base 60 number system. 2000 — Babylonians and Egyptians have theorems about the sides of triangles (trigonometry). 300 BCE — Babylonians use one of their punctuation symbols as a zero-like placeholder. 200-100 BCE — Brahmi numerals are invented, becoming the basis of Indian and Hindu-Arabic numerals — they do not include zero. Pingala uses a concept of void, śūnya, in his writings on prosody as a placeholder for zero essentially creating a big-endian binary system. Zero as a plaeholder isn\u0026rsquo;t repeated until the Lokavibhāga in 458 CE. This same century, Hipparchus is using a placeholder for zero and making tables of chords, which actually means bowstring in the Greek, and these are the precursors to trigonometric functions. 40 BCE — Andronicus of Rhodes compiles Aristotle\u0026rsquo;s works on logic into six volumes of the Organon. Interestingly, Aristotle would call logic \u0026ldquo;analytics\u0026rdquo;. 36 BCE — Maya-Lenca associated civilizations already have zero as part of the long count calendar. They used a base 20 number system, and a few remaining cultures still use it. The concept spreads through the adjacent regions, but as far as we know it never spreads beyond the so-called \u0026ldquo;Americas\u0026rdquo;. The Tawantinsuyu (Inca) had an encoding for zero in their khipu by there being a missing knot in the corresponding position. It would be amazing to see what kinds of computation could have evolved out of this system, but it was cut short by colonization. Perhaps one day Indigenous people will continue developing our indigenous systems. They also had various mechanisms for calculation, see: Maya number system, Yupana, and Nepōhualtzintzin. 200 — Diophantus of Alexandria. 350-505 — Surya Siddhanta using similar methods to Hipparchus, the math of the heavens (jyotisha) are laid out in terms of the jya (bow-string). 499 — Aryabhatiya introduces sine, cos, and inverse sine (jya, koti-jya, utkrama-jya) as half angle half chord versions of those found in Surya Siddhanta. ~800 — Virasena calculate base 2,3, \u0026amp; 4 logarithms. 820 — Al-Khwārizmī writes Al-Kitāb al-mukhtaṣar fī ḥisāb al-jabr wal-muqābala, or The Compendious Book on Calculation by Completion and Balancing. 1126 — Adelard of Bath translates Al-Khwārizmī\u0026rsquo;s works on Indian numbers as Dixit Algorizmi. 1145 — Robert of Chester translates Al-Khwārizmī\u0026rsquo;s book of \u0026ldquo;algebra\u0026rdquo; into Latin as Liber algebrae et almucabala. 1150 — Bhāskara II writes the Siddhānta Śiromani which lays out methods of trigonometry and calculus, but predated Newton and Leibniz. 1202 — Leonardo Fibonacci publishes Liber Abaci. It also included a well known sequence of numbers from the Arabic world which became known as the Fibonacci sequence. The sequence was known as early as 200 BC in Indian in the works of Pingala. 1530 — Yuktibhāṣā was a largely ignored treatise on math and astronomy in the Malayalam language. It laid out the methods of calculus, but predated Newton and Leibniz. 1614 — Napier lays out his idea for logarithms in Mirifici logarithmorum canonis descriptio. 1637 — Both René Descartes + Pierre de Fermat develop methods of analytic geometry which extends the graphical methods laid out by Omar Khayyám, 11th centrury Persian mathematician, and likely Menaechmus, Greek mathematician 380-320 BCE. 1654 — Blaise Pascal + Pierre de Fermat founds the mathematical theory of probabilities. 1735 — Leohard Euler lays the foundations of graph theory 1799 — Carl Friedrich Gauss proves the fundamental theorem of algebra. 1843 — John Stuart Mill publishes A System of Logic, Ratiocinative and Inductive. 1847 — George Boole introduces an immature version of his system of logic. 1854 — George Boole publishes An Investigation of the Laws of Thought on Which are Founded the Mathematical Theories of Logic and Probabilities. 1874 — Georg Cantor starts laying the foundation of Set Theory. 1889 — Giuseppe Peano publishes \u0026ldquo;Arithmetices principia: nova methodo exposito\u0026rdquo; which lays out the Peano Axioms. 1891 — Cantor lays out his diagonal argument 1928 — David Hilbert reformulates his earlier problem of proving the consistency of the Peano Axioms into three parts: 1) Is mathematics complete? 2) Is mathematics consistent? 3) Is mathematics decidable? (The Entscheidungsproblem) 1930 — Kurt Gödel announces a proof relating to the completeness question. 1931 — Kurt Gödel publishes \u0026ldquo;On Formally Undecidable Propositions of Principia Mathematica and Related Systems I\u0026rdquo; 1933 — Kurt Gödel + Jacques Herbrand create the general recursive functions. 1935 — Alonzo Church publishes \u0026ldquo;An Unsolvable Problem of Elementary Number Theory.\u0026rdquo; 1936 — Alonzo Church publishes \u0026ldquo;A Note on the Entscheidungsproblem.\u0026rdquo; Emil Post publishes \u0026ldquo;Finite Combinatory Processes. Formulation I.\u0026rdquo; 1937 — Alan Turing publishes \u0026ldquo;On Computable Numbers With an Application to the Entscheidungsproblem\u0026rdquo;. Claude Shannon publishes his masters thesis, \u0026ldquo;A Symbolic Analysis of Relay and Switching Circuits\u0026rdquo; 1939 — Alan Turing publishes his PhD thesis, \u0026ldquo;Systems of Logic Based on Ordinals.\u0026rdquo; 1952 — Grace Hopper creates an operational link-loader (called a compiler back then). 1955-1959 — Grace Hopper + her team developed the FLOW-MATIC language. 1957 — First Fortran compiler by John Backus. 1958 — Cobol first developed by Committee on Data Systems Languages (CODASYL). Delagates included Mary K. Hawes, Grace Hopper, Jean Sammet, and Saul Gorn. Also see Wikipedia\u0026rsquo;s Timeline of Mathematics. Also see Wikipedia\u0026rsquo;s Timeline of Programming Languages.  Communications Basis The communications basis is separate from the physical basis because it evolved separately, until the concepts were merged together in the 1960s. The communications basis started with the telegraph, then teleprinting, then the telephone. As the telephone developed automatic ways of routing calls, the necessary concepts of digital addressing were developed.\n 1826-1830 — Joseph Henry does the leg work which leads to the electromechanical relay and the telegraph. 1831-1833 — Carl Friedrich Gauss + Wilhelm Eduard Weber work on electromagnetic theory and build a telegraph in 1833. Two units of magnetic flux are named after them. 1832 — Pavel Schilling demonstrates his needle telegraph. That same year Charles Wheatstone lectures on this same idea telling people that it was already technically possible to build a telegraph. Samuel Morse meets Charles Thomas Jackson and the two discuss Jackson\u0026rsquo;s electromagnet. 1836 — William Cooke takes interest in the telegraph in Europe. 1837 — Cooke + Wheatstone demostrate a telegraph over a distance of 1.5 mi. 1838 — Morse, Gale (a personal friend of Joseph Henry), + Alfred Vail develop Morse code and build a telegraph using electromechanical relays to increase the distance served to 10 mi. There was a public demonstration at Speedwell Ironworks in New Jersey and they transmitted the message \u0026ldquo;A patient waiter is no loser\u0026rdquo;. 1840 — Wheatstone patents his \u0026ldquo;Wheatstone ABC Instrument\u0026rdquo;. 1841 — Alexander Bain creates the first teleprinter, followed Royal Earl House in 1846, + David Edward Hughes in 1855. 1844 — Morse demonstrates the message \u0026ldquo;What hath God wrought.\u0026rdquo; He sent it 38 miles from Supreme Court Chamber in the US Capitol basement to Mount Claire Station in Blatimore Maryland. 1845 — Wheatstone + Cooke register the Electric Telegraph Company. 1863 — Edward A. Calahan invents the stock ticker. 1864-1866 — Wheatstone advises the Atlantic Telegraph Company\u0026rsquo;s Atlantic Cables. 1870 — Telegraph systems in the UK are placed government control. Émile Baudot invents his 5 bit code. The baud, or the unit of symbol transmission, is named in honor of him. 1874 — Western Union\u0026rsquo;s President William Orton proclaims the telegraph was \u0026ldquo;the nervous system of commerce\u0026rdquo;. Alexander Graham Bell meets with John Henry to discuss his idea. Henry encourages Bell and tells him to get the knowledge he needs. Later, Bell meets Thomas A. Watson and the two begin to work together. 1876 — \u0026ldquo;Mr. Watson come here — I want to see you.\u0026rdquo; Later that year they demonstrated a two-way call over 2.5 mi between Cambridge and Boston. 1877 — Bell Telephone Company. 1888 — Almon Brown Stroger develops the first commeercially succesful stepping switch, or uniselector. 1891 — Stroger patents the the rotary dial. The next years he sets up the first 1915 — Bell made the first transcontinental phone call, 3400 miles apart between NYC and San Francisco. 1925 — Bell Telephone Labs, Inc. forms from Western Electric + AT\u0026amp;T. 1926 — Telex developed in Germany. German Post Office starts telext service in 1933. 1928 — Ralph Hartley publishes \u0026ldquo;Transmission of Information.\u0026rdquo; 1948 — Claude Shannon publishes \u0026ldquo;A Mathematical Theory of Communication\u0026rdquo; 1949 — Claude Shannon publishes \u0026ldquo;Communication Theory of Secrecy Systems.\u0026rdquo; 1951 — Claude Shannon published \u0026ldquo;Prediction and Entropy of Printed English.\u0026rdquo;  Physical Basis The physical basis of computing is intriguing, because we were building similar, yet limited, physical mechanisms since proabbly around 300BCE. While Babbage had an amazing idea with the analytical engine, the design was never finalized and correspondingly never built. It wasn\u0026rsquo;t until the electromechanical developments of the communications basis that we could transfer information to distances needed to fully implement computers which were powerful enough to be general purpose.\n 200 BCE — Likely time period of the Antikythera mechanism and other similar analog computation devices. 850 — The Banū Mūsā borther\u0026rsquo;s are commissioned by the Caliph of Bagdad to write a book on mechanical devices called Kitab al-Hiyal, or_Book of Ingenious Devices_. 1206 — Ismail al-Jazari writes a book Kitab fi ma\u0026rsquo;rifat al-hiyal al-handasiya, or Knowledgebook of Engineering Tricks. 1330 — Richard Wallingford builds the Saint Albans Clock. Then more clocks start to show up. This is merely 128 years after Fibonacci reintroduced mathematics from the Arab world. How odd would it be if those mathematic pricinples were the only ideas which had diffused from the Arab world into the Latin and English speaking world? 1642 — Blaise Pascal creates a mechanical calculator called the Pascaline. 1672-1694 — Inspired by Pascal, Gottfried Wilhem Leibniz constructs a stepped reckoner, but the gearwork couldn\u0026rsquo;t be fabricated properly. 1725 — Basile Bouchon partially automates part of weaving by using perforated paper tape. 1804 — Joseph Marie Jacquard fully automated weaving with punched cards. 1820 — Thomas de Colmar patents the Arithmomètre. 1822 — Charles Babbage creates the difference engine. 1827 — Georg Ohm develops his law relating current, voltage, and resistance. 1833 — Ada Lovelace meets Charles Babbage. 1843 — Ada Lovelace translates Luigi Frederico Menabrea\u0026rsquo;s description of Charles Babage\u0026rsquo;s presentation, but she adds extensive annotations and an appendix with what is arguably the first algorithm for calculating the Bernoulli Numbers. The program was essentially written in machine language. As for the engine itself, it was never fully built. Only its predecessor, the difference engine was fully built in 1990. 1854 — Gustav Kirchoff generalizes Ohm\u0026rsquo;s law. 1872 — Sir William Thompson makes a tide-predicting machine using pulleys and wires. 1884 — Herman Hollerith uses punched cards to assist tabulation. His company merged with others and became IBM in 1924. 1927 — Working differential analyzer made by Vanavar Bush. 1934 — Tommy Flowers creates a workable test of a vacuum tube computer. 1937 — Alan Turing builds an eletromechanical relay based digital \u0026ldquo;computer\u0026rdquo; while working on his thesis at Princeton (the relay is barrowed from the communications industry). 1944 — Havard Mark I. 1945-1947 — Alan Turing works on the Automated Computing Engine. 1945 — ENIAC 1947 — The first point contact transistor is demonstrated by John Bardeen, Walter Brattain, and William Shockley at Bell Labs. 1959 — This first MOSFET was created by Mohamed Atalla + Dawon Kahng. 1960 — The first Integrated Circuits were being created. In the following years, the Apollo program would be one of the largest consumer of ICs. 1965 — Gordon Moore observes that the transistor density of ICs was doubling every two years ([Moore\u0026rsquo;s Law Failed Conjecture]). 1971 — Intel produces the 4-bit 4004 microprocessor.  The Evolution of Programming In the beginning, programming a machine was task full of tedium. One had to:\n Be intimately familiar with the hardware being used. Analyze the scope of the computation. Divide the computation into stages which can be performed on the hardware. Plant out the logic and arithmetic of each task and how memory would be utilized. Translate that logic, arithmetic, and storage instructions into machine code. Input that code into the machine using an interface specific to each machine (wires, switches, punch cards, etc.). Read out and record the output of the computation.  Later, assemblers were invented that let people use architecture specific mnemonics called assembly language instead of binary, octal, or hexadecimal. In time, people like Grace Hopper came along and — in addition to removing physical bugs from the hardware — they created higher level languages. These were unique in several ways. One, they didn\u0026rsquo;t require complete knowledge of the hardware. Two, while they still required some memory management, they could plan out memory address offsets and register usage automatically. Three, you could write a program on one machine architecture and it was likely that if the language became avalable on another machine architecture, it would still compile.\nThe next big evolution in programming was dynamic memory management. This meant programmer no longer had to specifically plan out memory usage (in theory), but the language itself would plan out how and when to allocate and release memory. There was typically a reference counter for variables and when the reference count reached zero the memory would be released. This evolved into more advanced forms of garbage collection. Unfortunately, there were some unfortunate side effects. Sometimes people could write code which cause a rerference to stick around beyond its actual use, this lead to memory leaks. Also, in certain cases the garbage collector would cause some pretty awful hickups when it decided it was time to clean up during a critical moment. There are work-arounds, but they typically mean hacking the language into letting one plan out memory allocation manually.\nThere are a lot of patterns which have emerged over the decades, and there are many books written about them. A modicum of the patterns have libraries or frameworks which support them. Many of them don\u0026rsquo;t, which means that programmers must build their own libraries or frameworks for many patterns.\nBy default, many programming laguages support a text based environment because of the historical backwards compatiblility of only having a text based interface. When programs entered the world of visual interfaces there where several ways that interfaces could be built. Many games opted for implementing their own graphics engine which wrote directly to the video buffer (or virtual buffer, which was copied synced to the refresh rate to minimize visual artifacts). Programs for operating systems like OS/2, Windows, and other interfaces would use a kind of object oriented approach that would work even if the laguage wasn\u0026rsquo;t object oriented.\nEvery visual element on the screen would have multiple objects associated with them. Many properties had to be filled in programmatically in an imperative style. Messages would be dispatched to worker threads through a central dispatcher (a WindowProc in Windows). Absolutely everything about the user interface had to laid out programmatically. If you wanted a particular layout that would resize as the window changed, you needed to write the code yourself. This started changing when Sun Microsystems released Java with its Abstract Windowing Toolkit and became easier with Swing. Along with those layout engines, the standards starting to brew around HTML + CSS started to make declarative UIs very appealing.\nProgramming is Stuck Fundamentally, nothing about programming interfaces has changed since 1997. Data exchange (or data binding, if you prefer) remains an issue; though it seems like a few patterns are being settled on. Organizing code around UI and UX is still an issue. Making sure code is organized around various independent orthogonal issues seems to be a challenge. Most languages still place the burden on the programmer to manage where data is and how it is transfered around the system. Things like GraphQL have made many of these issues easier to solve. However, we still keep repeating ourselves over and over and reinventing the same wheel someone else invented in the 70s. Sometimes we get actual progress.\nWe have an acronym for to remind us not to do this: DRY, Don\u0026rsquo;t Repeat Yourself. It is the maxim most programmers live by. It is why we build standard libraries, garbage collectors, frameworks, reusable bits of code, isomorphic coding, and many other things. However, there are certain things that always seem to need to be repeated with a few changes each time we add a new screen of form to an application.\n  XKCD: \u0026#34;StackSort connects to StackOverflow, searches for \u0026#39;sort a list\u0026#39;, and downloads and runs code snippets until the list is sorted.\u0026#34;    Next\n"});index.add({'id':4,'href':'/docs/nkp/analyze-sota/','title':"Analyzing the State of the Art",'content':" This is a work in progress. It will likely become a book at some point.\n Analyzing the State of the Art With todays applications, there is typically a focus on serving large numbers of people across multiple platforms. This is complicated by those various platforms requiring different languages and technologies in order to implement each part. Many languages have been focused on incremental improvements over previous languages. This is also the case for many web technologies.\nWe have a wide variety of languages which can be used on the server side. In fact, our choice on the server side is nearly unlimited and is only constrained by convenience or special needs. Clients can be written in many different languages, especially given the rise of transpilers. Generally, browser based apps are constrained to languages which readily allow usage of the libraries widely avaiable through NPM. Client apps on iOS are limited Objective C, Swift, and other web languages running in a web view. Android apps are limited to languages which run in the JVM, languages with a C interface, and web languages running in a web view. + In the recent few years, web apps have started to mature in their approach to using components, data binding, and approaches to manipulating the DOM. Methods like Relay and GraphQL have also simplified the serialization of data for views. Other technologies like flat buffers on ArrayBuffers, service workers, and HTTP/2 have allowed speeding up the tranfer of data.\nDespite all of these improvements, web application development is still not too far removed from where it was in the beginning when JavaScript and VBScript were just taking off in browsers. Programming is still stuck in low level thought, while apps are much broader in scope. Our languages and tools have not kept up with the complexity of what we try to accomplish. Most of our programming languages are still systems programming laguages leaving us to repeat oursleves over and over again.\nDuplication in Architecture Let\u0026rsquo;s analyze a relative simple web application that could be something from real life. Each of the components may be physically duplicates and load balanced. We have a system composed of:\n Websever which serves front end code. Backend API service proxied through the webserver. Database which holds all the data for the system. Service which collects and aggregates statistics from the system in Redis. Redis keystore which stores the online aggregation of data and also stores the session data in another database.  We can see a lot duplication which should be examined in order to determine if there are any opportunities for reducing complexity. The first set of duplicates to bring attention to are the aspects of data modeling and validation.\nThere\u0026rsquo;s actually a decent level of complexity going on here which needs to be appreciated. Several other systems (not included here) likely interact with the backend service. In many systems around today, there is likely an additional service worker which handles longer running tasks. I\u0026rsquo;m omitting all of that, just to focus on the core of the problem.\n   mermaid.initialize({ flowchart: { useMaxWidth:true } });  sequenceDiagram autonumber participant A as Alice participant B as Browser participant WS as Web Server participant API participant S as Service participant DB participant R as Redis A - B: Navigates to site B - WS: Initial Request activate WS WS -- B: Returns Frontend (FE) to Browser deactivate WS B - WS: Auth check activate WS WS - API: Auth check (cont.) activate API API - R: Retrieve session data activate R R -- API: Session data deactivate R API -- WS: Return session, if exists deactivate API WS -- B: Session (cont.) deactivate WS B - WS: Asset request activate WS B - WS: Asset request WS -- B: Return asset WS -- B: Return asset deactivate WS B - A: Sees the UI A - B: Requests with UI B - WS: FE requests from API activate WS WS - API: Webserver proxies to API activate API API - DB: API requests data from DB activate DB DB -- API: DB returns data to API deactivate DB API -- WS: API proxies through webserver deactivate API WS -- B: FE receives the data from the API deactivate WS B -- A: Sees update A - B: Requests with UI B - WS: FE requests from API activate WS WS - API: Webserver proxies to API activate API API - S: API requests data from S activate S S - R: S requests data from Redis activate R R -- S: Redis returns data to Service deactivate R S -- API: Returns data to API deactivate S API -- WS: API proxies through webserver deactivate API WS -- B: FE receives the data from the API deactivate WS B -- A: Sees update With this diagram and the one above, we can begin to see the complexity of serializing, marshalling, and validating data and how it relates to the duplication of the data models across multiple systems.  Duplication I: Data Definitions, Validations, and Serialization In this example let\u0026rsquo;s assume the API is written in Ada, the FE is written in JavaScript, the Service is written in C++, and the database schema is in a MySQL dialect. This means that we have duplication of:\n the type specifications in four different languages. validation constraints in four different laguages. serialization of these models in three different languages (the DB already has a serialization format built in, but I\u0026rsquo;m not counting it since we don\u0026rsquo;t have to specify it or manually wire it).  Let\u0026rsquo;s take an overview of each of these. First, there\u0026rsquo;s the SQL definition of the table. There\u0026rsquo;s a few things we need to notice about this. It uses the database\u0026rsquo;s built-in types. It specifies ranges on the length of certain fields. Curiously, besides basic type safety, it provides no actual verification of the data for patterns. If there was an EMAIL type in SQDL\u0026rsquo;s DDL, it would be able to validate the form of the email address according to the RFC. This, of course, would be less than ideal given the latency in verifying the form of the data by going through two network connections, with one potentially having less than ideal properties. Additionally, since databases\n-- Using types provided by the database which may be different than the types -- provided by other languages. CREATE TABLE person ( id INTEGER PRIMARY KEY, first_name VARCHAR(50) not null, last_name VARCHAR(75) not null, nick_name VARCHAR(50) not null, dateofbirth DATE not null ); -- Ada doesn\u0026#39;t have a standard Date type, but if you know Ada it\u0026#39;s really easy -- to make your own date record type with bound checking. So assume we\u0026#39;ve defined -- a Date type in `SomeLibrary`. with SomeLibrary.Date type Person is record id : Integer; firstName : String(1 .. 50); lastName : String(1 .. 75); nickName : String(1 .. 50); dateOfBirth : SomeLibrary.Date; end record /* * C++ also doesn\u0026#39;t have a built in Date type, but we could build one using * \u0026lt;ctime\u0026gt; and adding a bit of math. For simplicity\u0026#39;s sake, lets assume we\u0026#39;ve * already defined one in SomeLibrary. */ #include \u0026#34;some_library.h\u0026#34;using namespace SomeLibrary; class Person { int id; char* firstName; char* lastName; char* nickName; Date dateOfBirth; } /* * While JavaScript has a built in Date object. It is not a type. We know this * because `typeof (new Date()) === \u0026#39;object\u0026#39;`. This is on top of JavaScript * not being a statically typed language, so it doesn\u0026#39;t matter so much. */ class Person { id; firstName; lastName; nickName; dateOfBirth; } Duplication II: Business and Workflow Logic Duplication III: Views and Rendering "});index.add({'id':5,'href':'/docs/ice-age/','title':"Ice Age Map",'content':"Ice Age Map I have a vision to create a virtual world where the history and multiple heritages of humanity are visible and explorable. The virtual world should be able to simlate the tectonic plates, the climate, and the ocean levels. In the videos and map below, there is a very different picture of the land masses during the ice age than today. Current research shows that many centers of our civilization may actually be underwater from the rise in sea level. By building this map, it could point out patterns in settlement which could lead to new discoveries in addition to being an important educational resource.\nTo sample the data I intend on putting on this map, please see: Research Related to Indigenous Peoples Of The So Called Americas.\nTo see the techologies and other sources of data which I\u0026rsquo;ll likely use to build the map, see: open-source-gis.\n       If you are interested in this project, please consider supporting me.\n  "});index.add({'id':6,'href':'/docs/narrative-culture/','title':"The Emergence of Culture",'content':"Next\n This is a draft of what will likely become a book detailing how our minds form culture based on shared experiences and a Nash-like equilibrium of cultural dynamics.\n The Emergence of Culture Most of us are very deeply embedded in our cultures. Most of us only have one culture and we are typically blind to how it shapes our thoughts and feelings. Culture is one of the filters through which we see the world. It is one of the deepest ways we make sense of the world rooted in our experiences and intergenerational ways of thinking. Culture shapes how language is understood. Culture shapes what actions are considered acceptible. Culture forms how we relate to every other entity in the universe.\nMany definitions of culture do not seem to have the necessary depth to fully address the phenomenon. They look at very specific manifestations of culture and mistake those check lists as culture in and of itself. This leads to many issues and misunderstandings which will be addresssed later in this work. Here are some definitions according the the Oxford English Dictionary and Merriam-Webster:\n The arts and other manifestations of human intellectual achievement regarded collectively (OED).\n  The customs, arts, social institutions, and achievements of a particular nation, people, or other social group (OED).\n  The customary beliefs, social forms, and material traits of a racial, religious, or social group. Also: The characteristic features of everyday existence (such as diversions or a way of life) shared by people in a place or time (MW).\n  The integrated pattern of human knowledge, belief, and behavior that depends upon the capacity for learning and transmitting knowledge to succeeding generations (MW).\n These definitions seem to move from pure material culture and acheivement to the last definition which appears to be all encompassing, but I feel like it\u0026rsquo;s missing a particular aspect which we have no word for in English. The closest I can come to defining it is a set of reference frames which reify reality and which are key to survival within the hyperspace created through both the environment and ways of relating to on another.\nIn some cases, the definition of culture could parallel the meaning that is used in regards to cultures of bacteria, molds, or fungi. It is something that has a distinct life as a collective which engenders specific internal conditions within individual organisms. Those internal conditions are dependent on the continuation and reproduction of the specific culture over time. The culture will evolve and change over time, but there will likely a distinct core of it. In some cases there may be an apparent discontinuity due to extreme circumstances (disease, foreign invasions, colonization, etc.).\nTOC   Perceptual \u0026#43; Narrative Zones   Each individual (an agent) has their own perceptual zone which differs from other people\u0026#39;s perceptual zones. The perceptual zones may overlap, but in many case they don\u0026#39;t. The perceptual zone is the combined whole of experience each individual is perceiving and sense-making at any given time.    Next\n"});index.add({'id':7,'href':'/docs/nkp/','title':"A Matter of Programming",'content':"Next\n This is a work in progress. It will likely become a book at some point.\n A Matter of Programming I\u0026rsquo;ve started to put a lot of thought into writing this and in many senses it will be the columniation of 26 years of experience in technology. The experiences have ranged from electronics and math, to building a simple computer out of logic gates when I was 11, to programming professionally since 2009 when I was 25. I hope you find everything in here to be enlightening.\nThis is dedicated to my parents. They made many sacrifices for me to have these experiences.\nForeward The very first computer I touched was the Commodore 64. I was still crawling around in my diapers, but was incredibly intrigued by this device which held my brother so wrapt in the glow of the monitor. I didn\u0026rsquo;t realize its prompt was actually a BASIC interpreter until I started learning programming 9 years later. In the course of the intervening time, I spent more than my fair share of time playing Frogger — trying to jump across logs and traffic and inevitably getting squished by traffic.\nThe Commodore 64 was my first computer. The \u0026quot;64\u0026quot; stood for an incredible 64k of ram and it cost about $600 is the 1980\u0026#39;s.\nWhat was your first computer/gaming device? pic.twitter.com/sY1M9TpeKp\n\u0026mdash; NatoJenkins (@NatoJenkins) May 20, 2020  My parents and I were walking though the mall and my dad saw this Packard Bell 316SX with a 16MHz 386 processor. I could tell it was an important juncture in our life by how my parents talked about it. My mom saw the price tag and immediately protested how expensive it was. I vaguely remember my father reassuring my mom that we had the money — though in all honesty we probably shouldn\u0026rsquo;t have bought it. We moved the van around to loading dock, loaded the box into the van, and then unloaded the house. It had a whole stack of 3.5\u0026rdquo; — not too floppy — floppy disks to install both MS DOS \u0026amp; MS Windows 3.1. I remember sitting in anticipation with my dada waiting for every single bit of data on those disks to copy over to the hard drive and get inflated. After we finally installed Windows, we typed win and watched this amazing graphical logo pop up as Windows 3.1 started up. The first thing my dad did was start up Minesweeper and Solitaire. It was late and and bedtime. Installing MS Office had to wait until the next evening.\nA Packard Bell Legend 316SX! I love this series of Packard Bell desktops, they were my first PC. This one is a little earlier, a 16mhz 386 pic.twitter.com/8TkNObsK1k\n\u0026mdash; foone (@Foone) September 14, 2017  It was around this time that my dad started teaching my about electronics. We built some simple circuits which made LEDs blink in various orders. We made timer circuits. We ever made an electronic \u0026ldquo;organ\u0026rdquo;, but plying it involved a jumper wire and dealing with the differences in sound quality cause by using different types of capacitors. Then I started learning digital electronics and got interested in Boolean logic.\nIt was also around this time that I discovered some of the more technical entries in the Encylclopaedia Brittanica, like Optimization Theory, Game Theory, Magneto Hydrodynamics, and General Relativity. I couldn\u0026rsquo;t understand the equationsand the way the sections on Calculus was written didn\u0026rsquo;t make any sense to me yet since I hadn\u0026rsquo;t studied algebra yet. I had no way of learning thee things, but yet I\u0026rsquo;d stare at them devotedly from time to time as though they were sacred mystical inscriptions. This ended up ruining my scholarly endeavors in high school, because I would gain access to the internet and find MIT\u0026rsquo;s online class materials for calculus and vector calculus. Eventually, I borrowed my music teacher\u0026rsquo;s book on differential equations and, while I didn\u0026rsquo;t study the prereqs enough to solve the problems in the book, I grasped it conceptually. But, back to the timeline.\nOne of the most interesting things we had, besides the Encyclopaedia Brittanica, my dad\u0026rsquo;s old medical texts, and his electronics books, was a book called \u0026ldquo;DOS for Dummies.\u0026rdquo; It was something we bought sometime after we got the computer. I worked my way through that book when I was 8 years old. After working through that, I found the MS DOS 5.0 manual and proceeded to work my through it. I learned about batch scripting and learned how to modify our CONFIG.SYSand AUTOEXEC.BAT. Then the qbasic command caught my eye around the time I turned 9. The MS DOS manual was incredibly vague about it. It mentioned looking at the on-line help and left it at that (this was before I knew about the Internet and the internet was definitely not required). With slight hesitation, I typed in the command unsure of what it could do to the system. A blue screen came up and announced Welcome to MS-DOS QBasic.\nAfter realizing how extensive the \u0026ldquo;Survival Guide\u0026rdquo; was and learning to program, I realized there was so much more to read through. There was online help for MS Office and while reading through that, I came across this things called Visual Basic for Applications. I was intrigued by being able to write applications that executed in an Excel worksheet. Eventually we got another computer with Windows 95 and a Cyrix 6x86 processor. When we would frequent the book stores at the mall, I started reading various books on programming. I started reading through books on C and C++. I started reading other books like \u0026ldquo;Tricks of the Game-Programming Gurus\u0026rdquo; and \u0026ldquo;Upgrading and Repairing PCs\u0026rdquo;. Then I moved onto Dr. Dobb\u0026rsquo;s and Visual Basic Programmer Journal.\nThe problem I always encountered was that I never had a compiler and the only assembler I had was debug which was much more of a diassembler, but it did let me write a few simple assembly programs. So I stuck to Visual Basic and writing C++ programs on paper.\nThings changed when web development started be a thing. There were even magazines about it. One magazine was this oversized quarterly with a CD-ROM. That\u0026rsquo;s how I first learned HTML + CSS in 1996. I also found out that I could program the browser in VBScript, but quickly found out that JavaScript was the up and comming language. When my parents would go shopping at Price Club (before it was CostCo), I\u0026rsquo;d go over to the computers and play around with the browsers and see what kinds of interesting things I could code up while my parents were shopping. Some of you might be looking at me, squinting, wanting to ask, \u0026ldquo;Why couldn\u0026rsquo;t you do that at home?\u0026rdquo; The version of Internet Explorer we had was too old and it wasn\u0026rsquo;t until I figured out how to get a Internet Explorer 4 installation CD that I was abe to mess around with other things, like tables and JavaScript. We still didn\u0026rsquo;t have the internet, so I had to make do with a version of MS IIS that I found to be able to host my own local site.\nEventually, I got a book on C++ that included a crippled version of MS Visual C++, but I was never really able to master Windows programming in C++ because I didn\u0026rsquo;t have all of the requisite knowledge and I couldn\u0026rsquo;t afford books on it. I probably could have taken copius notes at the bookstore, but I had gotten in trouble at one of the bookstores before for taking notes like that. Things changed when I found out about Java and found ways to download it at my parents friends houses so that I could install it on my computer at home. I learned it from the docs and a couple of articles from Dr. Dobb\u0026rsquo;s. I started building UIs in Java and realized that it was a lot of work compared to building web applications with HTML and building apps with Visual Basic and its form editor.\nIn high school, I would learn about Linux and how to set up a webserver on it. I college, my friends and I would come up with an idea to host a show on the computer network. We would come up topics for \u0026ldquo;The Show\u0026rdquo; (yes, it was that good) and film it. I would make the website, edit some of the audio, make title screens, and host the show on my computer in my dorm room. This was all in 2004, one year before YouTube.\nAfter college, I\u0026rsquo;d set up a system to help livestrem the audio of my friend\u0026rsquo;s restuarant\u0026rsquo;s music shows. I also ended up building him a Point of Sale system which I think he still uses. Then I got involved with a start-up which only paid me $200/mo at most while I was living out of a friend\u0026rsquo;s house survivng only off food stamps and generosity. That pattern continued until 2012.\nEventually I learned PHP, C#, Python, Ruby, Ada, Coffee Script, Clojure, Objective C, Scala, Haskell, Go, and I\u0026rsquo;ve looked at a lot of other languages. I keep seeing the same patterns creep up all the time. We keep repeating ourselves over and over again.\nTOC   What is Programming About?   A historical look at the origin of programming.   Analyzing the State of the Art   Here we analyze a fairly standard architecture.    Next\n"});index.add({'id':8,'href':'/docs/math-explorations/','title':"Math Explorations",'content':"Math Explorations   Fractional, Real, Imaginary and Complex Exponents   Ever wondered how anyone could raise an integer to a fractional or irrational power?   "});index.add({'id':9,'href':'/medium-posts/2020-05-19-star-trek-or-us-space-force/','title':"Star Trek or US Space Force?",'content':""});index.add({'id':10,'href':'/medium-posts/2020-04-10-coronavirus-sars-cov2-dissecting-the-virus/','title':"Coronavirus SARS-CoV-2: Dissecting the virus",'content':""});index.add({'id':11,'href':'/medium-posts/2020-03-17-coronavirus-sars-cov2/','title':"Coronavirus SARS-CoV2: 03/17/2020",'content':""});index.add({'id':12,'href':'/medium-posts/2020-02-10-our-broken-realities/','title':"Our Broken Realities",'content':""});index.add({'id':13,'href':'/medium-posts/2019-11-14-a-history-of-amazon-deforestation/','title':"A History of Amazon Deforestation",'content':""});index.add({'id':14,'href':'/medium-posts/2019-07-21-root-beers-indigneous-roots/','title':"Root Beer’s Indigenous Roots",'content':""});index.add({'id':15,'href':'/medium-posts/2019-07-31-the-origin-of-concentration-camps/','title':"The Origin of Concentration Camps",'content':""});index.add({'id':16,'href':'/medium-posts/2019-03-05-help-im-being-stalked-by-robots/','title':"Help! I’m Being Stalked by Robots!",'content':""});index.add({'id':17,'href':'/medium-posts/2019-01-22-mlkj-stares-towards-the-16th-street-baptist-church/','title':"Martin Luther King Jr. Stares Towards the 16th Street Baptist Church",'content':""});index.add({'id':18,'href':'/medium-posts/2019-01-20-the-plundering-of-nations-elder-nathan-phillips-maga-boys-mmiw/','title':"The Plundering of Nations, Elder Nathan Phillips, the MAGA Boys, and MMIW",'content':""});index.add({'id':19,'href':'/medium-posts/2018-08-15-the-peretual-nomad/','title':"The Perpetual Nomad",'content':""});index.add({'id':20,'href':'/medium-posts/2018-07-21-baby-you-incomplete-me/','title':"Baby, You Incomplete Me",'content':""});index.add({'id':21,'href':'/medium-posts/2018-05-04-150-years-of-the-1868-ft-laramie-treaty/','title':"150 Years of the 1868 Ft. Laramie Treaty",'content':""});index.add({'id':22,'href':'/medium-posts/2018-03-30-the-forests-of-a-nation/','title':"The Forests of a Nation",'content':""});index.add({'id':23,'href':'/medium-posts/2018-03-02-fake-accounts-bots-and-security-culture/','title':"Fake Accounts, Bots, and Security Culture",'content':""});index.add({'id':24,'href':'/medium-posts/2018-01-29-has-war-changed-the-way-we-do-relationships/','title':"Has War Changed the Way We Do Relationships? A few interesting correlations with industrialization, war, and relationships.",'content':""});index.add({'id':25,'href':'/medium-posts/2018-01-20-toccata-and-fugue-in-the-key-of-blockchain/','title':"Toccata \u0026 Fugue in the Key of Blockchain",'content':""});index.add({'id':26,'href':'/medium-posts/2018-01-16-does-blockchain-generate-trust/','title':"Does Blockchain Generate Trust?",'content':""});index.add({'id':27,'href':'/medium-posts/2018-01-13-what-can-we-do-about-net-neutrality/','title':"What Can We Do About Net Neutrality?",'content':""});index.add({'id':28,'href':'/medium-posts/2017-12-27-bitcoin-is-an-energy-hog/','title':"Bitcoin is An Energy Hog -- and its value seems tied to that fact",'content':""});index.add({'id':29,'href':'/medium-posts/2017-12-22-insincerely-yours-the-gop-fcc/','title':"Insincerely Yours — The GOP \u0026 FCC",'content':""});index.add({'id':30,'href':'/medium-posts/2017-12-04-weaving-our-worlds/','title':"Weaving our Worlds",'content':""});index.add({'id':31,'href':'/medium-posts/2017-11-28-the-hypothetical-future-of-space-communications/','title':"The Hypothetical Future of Space Communications",'content':""});index.add({'id':32,'href':'/medium-posts/2017-10-13-renewable-energy-generator-replacement/','title':"Towards a portable solar/wind replacement for gas generators",'content':""});index.add({'id':33,'href':'/medium-posts/2017-05-24-reality-of-making-ends-meet/','title':"Have we lost touch with the reality of making ends meet?",'content':""});index.add({'id':34,'href':'/medium-posts/2016-11-26-understanding-standing-rock/','title':"Understanding Standing Rock",'content':""});index.add({'id':35,'href':'/medium-posts/2016-11-16-bobby-kennedy-jr-standing-rock/','title':"Robert “Bobby” F. Kennedy Jr Speaks at Standing Rock",'content':""});index.add({'id':36,'href':'/medium-posts/2016-10-09-soul-upgrade/','title':"Soul Upgrade",'content':""});index.add({'id':37,'href':'/medium-posts/2015-10-03-what-do-school-shootings-tell-us-about-our-culture/','title':"What do school shootings tell us about our culture?",'content':""});index.add({'id':38,'href':'/medium-posts/2015-10-02-how-to-make-a-time-peice/','title':"How to Make a Time-b, I mean, Timepiece —or— Why People Who Get Scared About Things They Know Nothing About Make Me Want to Cry",'content':""});index.add({'id':39,'href':'/medium-posts/2014-11-18-abbreviating-huge-and-miniscule-numbers-with-math-and-javascript/','title':"Abbreviating Huge and Minuscule Numbers with Math and JavaScript",'content':""});index.add({'id':40,'href':'/medium-posts/2011-12-17-what-to-look-for-in-php-5-4-0/','title':"What to Look for in PHP 5.4.0",'content':""});index.add({'id':41,'href':'/medium-posts/2011-06-24-the-state-of-functional-programming-in-php-5-3-x/','title':"The State of Functional Programming in PHP 5.3.x",'content':""});index.add({'id':42,'href':'/medium-posts/2011-02-21-documentation-for-graphael-g-line-js/','title':"Documentation for gRaphael: g.line.js",'content':""});index.add({'id':43,'href':'/medium-posts/2010-11-09-map-viewport-location-privacy/','title':"Centering Map Viewports Near Locations while Preserving Privacy",'content':""});index.add({'id':44,'href':'/medium-posts/2010-01-25-profound-similarities/','title':"Profound Similarities",'content':""});index.add({'id':45,'href':'/medium-posts/2010-01-23-duplicating-virtualbox-machines-the-hard-way/','title':"Duplicating VirtualBox Machines the Hard Way",'content':""});index.add({'id':46,'href':'/medium-posts/2009-12-30-interesting-fibonacci-goodness/','title':"Interesting Fibonacci Goodness",'content':""});index.add({'id':47,'href':'/docs/','title':"Docs",'content':""});index.add({'id':48,'href':'/support-me/','title':"Support Me",'content':"Support Me There are numerous way you can help me meet my living needs. You can support me with a Patreon membership which includes two of my best photographs emailed to you each month. Beyond the basic membership, you\u0026rsquo;ll get a handwritten thank you letter.\nSign up on Patreon logoatreon.   If you\u0026rsquo;re feeling more like just giving a one time infusion of money, you can use the following methods:\nTip me with .\n  Tip me with cash.app.\n  Tip me with Venmo.\n   "});index.add({'id':49,'href':'/medium-posts/','title':"Writing",'content':"Writing Most of these entries link to my Medium publication, but some link to my writing elsewhere. I don\u0026rsquo;t put my writing behind the Medium paywall because I want it to be accessible to everyone, this means Medium doesn\u0026rsquo;t pay me to write anything. I you enjoyed my writing, for it helpful, or just want to make my day, please consider supporting my work\n"});})();